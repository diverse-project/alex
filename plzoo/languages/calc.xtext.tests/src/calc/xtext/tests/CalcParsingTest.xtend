/*
 * generated by Xtext 2.14.0
 */
package calc.xtext.tests

import calc.calc.Expression
import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(CalcInjectorProvider)
class CalcParsingTest {
	@Inject
	ParseHelper<Expression> parseHelper
	
	@Test
	def void op2plus2() {
		val result = parseHelper.parse('''2+2''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
	
	@Test
	def void op101times111() {
		val result = parseHelper.parse('''101 * 111''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
	
	@Test
	def void opDivByZero() {
		val result = parseHelper.parse('''24 / (4 - 4)''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
}
