/*
 * generated by Xtext 2.12.0
 */
package iot.lua.xtext.tests

import com.google.inject.Inject
import com.google.inject.Provider
import iot.System
import org.eclipse.emf.common.util.URI
import org.eclipse.emf.ecore.resource.ResourceSet
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Test
import org.junit.runner.RunWith
import org.junit.Assert

@RunWith(XtextRunner)
@InjectWith(IotLuaXtextInjectorProvider)
class IotLuaXtextPerfsTest {

	@Inject
	Provider<ResourceSet> rsp

	
	@Test
	def void loadModelMergeFork() {
		
		val warmup = 50
		val iterations = 500
		val res = newArrayList
		val resWar = newArrayList
		

		for(var i=0; i<warmup; i++) {
			resWar += run()
		}

		for (var i = 0; i < iterations; i++) {
			res += run()
		}
		
		
		println(resWar.map[""].join(""))
		println(resWar.join("\n"))
		
	}
	
	def long run() {
		val rs = rsp.get
		val r = rs.getResource(URI.createURI("perfs3.xmi"), true)
		r.load(null)

		val s = r.contents.head as System

		val rev = new exec_iot_lua.revisitor.impl.Exec_iot_luaRevisitor() {
		}
		val o = rev.$(s.sketch.activity)
		return o.main()
	}
}
