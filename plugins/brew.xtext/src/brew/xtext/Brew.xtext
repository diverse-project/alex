grammar brew.xtext.Brew with org.eclipse.xtext.xbase.Xbase

generate brew "http://www.xtext.brew/Brew"
import "http://www.xtext.ale/Ale" as ale
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase

BrewRoot:
	'behavior' name=ValidID
	importSemantics+=AleImport*
	(bound+=ClassBind | converters+=BasicConverter)*;

AleImport:
	'import' 'ale' ale=[ale::AleRoot|ValidID];

ClassBind:
	'bind' providedCls=[ale::AleClass|QualifiedName] 'to' requiredCls=[ale::AleClass|QualifiedName] ('with'
	methodsBound+=MethodBind*)?;

MethodBind:
	 concreteMethod=[ale::AleMethod|ValidID] '<=' abstractMethod=[ale::AleMethod|ValidID] (converter?='using'
	'converters'
	('init' initConverter=[BasicConverter|ID])?
	('params' ('-' paramsConverters+=ParamConverter)*)?
	('return' returnConverter=[BasicConverter|ID])?
	('close' closeConverter=[BasicConverter|ID])?)?;

ParamConverter:
	paramName=[types::JvmFormalParameter|ValidID] 'with' converter=[BasicConverter|ID] 'as' name=ID;

BasicConverter:
	{BasicConverter}
	'converter' name=ID body=XExpression;