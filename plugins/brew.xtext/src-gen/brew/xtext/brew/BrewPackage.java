/**
 * generated by Xtext 2.12.0
 */
package brew.xtext.brew;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see brew.xtext.brew.BrewFactory
 * @model kind="package"
 * @generated
 */
public interface BrewPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "brew";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.brew/Brew";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "brew";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  BrewPackage eINSTANCE = brew.xtext.brew.impl.BrewPackageImpl.init();

  /**
   * The meta object id for the '{@link brew.xtext.brew.impl.BrewRootImpl <em>Root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see brew.xtext.brew.impl.BrewRootImpl
   * @see brew.xtext.brew.impl.BrewPackageImpl#getBrewRoot()
   * @generated
   */
  int BREW_ROOT = 0;

  /**
   * The feature id for the '<em><b>Import Semantics</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BREW_ROOT__IMPORT_SEMANTICS = 0;

  /**
   * The number of structural features of the '<em>Root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BREW_ROOT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link brew.xtext.brew.impl.AleImportImpl <em>Ale Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see brew.xtext.brew.impl.AleImportImpl
   * @see brew.xtext.brew.impl.BrewPackageImpl#getAleImport()
   * @generated
   */
  int ALE_IMPORT = 1;

  /**
   * The feature id for the '<em><b>Ale</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALE_IMPORT__ALE = 0;

  /**
   * The number of structural features of the '<em>Ale Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALE_IMPORT_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link brew.xtext.brew.BrewRoot <em>Root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Root</em>'.
   * @see brew.xtext.brew.BrewRoot
   * @generated
   */
  EClass getBrewRoot();

  /**
   * Returns the meta object for the containment reference list '{@link brew.xtext.brew.BrewRoot#getImportSemantics <em>Import Semantics</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Import Semantics</em>'.
   * @see brew.xtext.brew.BrewRoot#getImportSemantics()
   * @see #getBrewRoot()
   * @generated
   */
  EReference getBrewRoot_ImportSemantics();

  /**
   * Returns the meta object for class '{@link brew.xtext.brew.AleImport <em>Ale Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ale Import</em>'.
   * @see brew.xtext.brew.AleImport
   * @generated
   */
  EClass getAleImport();

  /**
   * Returns the meta object for the reference '{@link brew.xtext.brew.AleImport#getAle <em>Ale</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ale</em>'.
   * @see brew.xtext.brew.AleImport#getAle()
   * @see #getAleImport()
   * @generated
   */
  EReference getAleImport_Ale();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  BrewFactory getBrewFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link brew.xtext.brew.impl.BrewRootImpl <em>Root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see brew.xtext.brew.impl.BrewRootImpl
     * @see brew.xtext.brew.impl.BrewPackageImpl#getBrewRoot()
     * @generated
     */
    EClass BREW_ROOT = eINSTANCE.getBrewRoot();

    /**
     * The meta object literal for the '<em><b>Import Semantics</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BREW_ROOT__IMPORT_SEMANTICS = eINSTANCE.getBrewRoot_ImportSemantics();

    /**
     * The meta object literal for the '{@link brew.xtext.brew.impl.AleImportImpl <em>Ale Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see brew.xtext.brew.impl.AleImportImpl
     * @see brew.xtext.brew.impl.BrewPackageImpl#getAleImport()
     * @generated
     */
    EClass ALE_IMPORT = eINSTANCE.getAleImport();

    /**
     * The meta object literal for the '<em><b>Ale</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALE_IMPORT__ALE = eINSTANCE.getAleImport_Ale();

  }

} //BrewPackage
