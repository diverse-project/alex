grammar fr.inria.diverse.alex.xtext.Alex with org.eclipse.xtext.xbase.Xbase

generate alex "http://alex.diverse.inria.fr/Alex"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

AlexRoot:
	'behavior' name=ValidID ('compile' 'as' compileTarget=CompileTarget)? javaImports=XImportSection?
	ecoreImport=EcoreImport
	alexImports+=AlexImport* classes+=AlexClass*;

CompileTarget:
	name=ID (truffle?='truffle')? (child?='child')? ';';

EcoreImport:
	'import' 'ecore' uri=STRING;

AlexImport:
	'import' 'alex' ref=[AlexRoot];

AlexClass:
	'open' (abstract?='abstract')? 'class' name=ValidID '{'
		('mutable' mutables+=MutableRef*)? 
		methods+=AlexMethod*
	'}';
	
MutableRef:
	name=ValidID
;

AlexMethod:
	AbstractMethod | ConcreteMethod;

ConcreteMethod:
	DefMethod | OverrideMethod;

AbstractMethod:
	'abstract' 'def' type=JvmTypeReference name=ValidID '(' (params+=FullJvmFormalParameter (','
	params+=FullJvmFormalParameter)*)? ')';

DefMethod:
	'def' type=JvmTypeReference name=ValidID '(' (params+=FullJvmFormalParameter (',' params+=FullJvmFormalParameter)*)?
	')' block=XBlockExpression;

OverrideMethod:
	'override' type=JvmTypeReference name=ValidID '(' (params+=FullJvmFormalParameter (','
	params+=FullJvmFormalParameter)*)? ')' block=XBlockExpression;
