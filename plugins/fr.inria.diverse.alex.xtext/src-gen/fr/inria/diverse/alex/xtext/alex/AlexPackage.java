/**
 * generated by Xtext 2.14.0
 */
package fr.inria.diverse.alex.xtext.alex;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see fr.inria.diverse.alex.xtext.alex.AlexFactory
 * @model kind="package"
 * @generated
 */
public interface AlexPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "alex";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://alex.diverse.inria.fr/Alex";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "alex";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  AlexPackage eINSTANCE = fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl.init();

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AlexRootImpl <em>Root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexRootImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAlexRoot()
   * @generated
   */
  int ALEX_ROOT = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_ROOT__NAME = 0;

  /**
   * The feature id for the '<em><b>Compile Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_ROOT__COMPILE_TARGET = 1;

  /**
   * The feature id for the '<em><b>Java Imports</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_ROOT__JAVA_IMPORTS = 2;

  /**
   * The feature id for the '<em><b>Ecore Import</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_ROOT__ECORE_IMPORT = 3;

  /**
   * The feature id for the '<em><b>Alex Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_ROOT__ALEX_IMPORTS = 4;

  /**
   * The feature id for the '<em><b>Classes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_ROOT__CLASSES = 5;

  /**
   * The number of structural features of the '<em>Root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_ROOT_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.CompileTargetImpl <em>Compile Target</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.CompileTargetImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getCompileTarget()
   * @generated
   */
  int COMPILE_TARGET = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPILE_TARGET__NAME = 0;

  /**
   * The feature id for the '<em><b>Truffle</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPILE_TARGET__TRUFFLE = 1;

  /**
   * The feature id for the '<em><b>Child</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPILE_TARGET__CHILD = 2;

  /**
   * The number of structural features of the '<em>Compile Target</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPILE_TARGET_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.EcoreImportImpl <em>Ecore Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.EcoreImportImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getEcoreImport()
   * @generated
   */
  int ECORE_IMPORT = 2;

  /**
   * The feature id for the '<em><b>Uri</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ECORE_IMPORT__URI = 0;

  /**
   * The number of structural features of the '<em>Ecore Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ECORE_IMPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AlexImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexImportImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAlexImport()
   * @generated
   */
  int ALEX_IMPORT = 3;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_IMPORT__REF = 0;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_IMPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AlexClassImpl <em>Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexClassImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAlexClass()
   * @generated
   */
  int ALEX_CLASS = 4;

  /**
   * The feature id for the '<em><b>Abstract</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_CLASS__ABSTRACT = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_CLASS__NAME = 1;

  /**
   * The feature id for the '<em><b>Mutables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_CLASS__MUTABLES = 2;

  /**
   * The feature id for the '<em><b>Methods</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_CLASS__METHODS = 3;

  /**
   * The number of structural features of the '<em>Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_CLASS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.MutableRefImpl <em>Mutable Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.MutableRefImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getMutableRef()
   * @generated
   */
  int MUTABLE_REF = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUTABLE_REF__NAME = 0;

  /**
   * The number of structural features of the '<em>Mutable Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUTABLE_REF_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AlexMethodImpl <em>Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexMethodImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAlexMethod()
   * @generated
   */
  int ALEX_METHOD = 6;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_METHOD__TYPE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_METHOD__NAME = 1;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_METHOD__PARAMS = 2;

  /**
   * The number of structural features of the '<em>Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALEX_METHOD_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.ConcreteMethodImpl <em>Concrete Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.ConcreteMethodImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getConcreteMethod()
   * @generated
   */
  int CONCRETE_METHOD = 7;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONCRETE_METHOD__TYPE = ALEX_METHOD__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONCRETE_METHOD__NAME = ALEX_METHOD__NAME;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONCRETE_METHOD__PARAMS = ALEX_METHOD__PARAMS;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONCRETE_METHOD__BLOCK = ALEX_METHOD_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Concrete Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONCRETE_METHOD_FEATURE_COUNT = ALEX_METHOD_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AbstractMethodImpl <em>Abstract Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.AbstractMethodImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAbstractMethod()
   * @generated
   */
  int ABSTRACT_METHOD = 8;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_METHOD__TYPE = ALEX_METHOD__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_METHOD__NAME = ALEX_METHOD__NAME;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_METHOD__PARAMS = ALEX_METHOD__PARAMS;

  /**
   * The number of structural features of the '<em>Abstract Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_METHOD_FEATURE_COUNT = ALEX_METHOD_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.DefMethodImpl <em>Def Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.DefMethodImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getDefMethod()
   * @generated
   */
  int DEF_METHOD = 9;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__TYPE = CONCRETE_METHOD__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__NAME = CONCRETE_METHOD__NAME;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__PARAMS = CONCRETE_METHOD__PARAMS;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__BLOCK = CONCRETE_METHOD__BLOCK;

  /**
   * The feature id for the '<em><b>Dispatch</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__DISPATCH = CONCRETE_METHOD_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Def Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD_FEATURE_COUNT = CONCRETE_METHOD_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link fr.inria.diverse.alex.xtext.alex.impl.OverrideMethodImpl <em>Override Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fr.inria.diverse.alex.xtext.alex.impl.OverrideMethodImpl
   * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getOverrideMethod()
   * @generated
   */
  int OVERRIDE_METHOD = 10;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__TYPE = CONCRETE_METHOD__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__NAME = CONCRETE_METHOD__NAME;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__PARAMS = CONCRETE_METHOD__PARAMS;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__BLOCK = CONCRETE_METHOD__BLOCK;

  /**
   * The number of structural features of the '<em>Override Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD_FEATURE_COUNT = CONCRETE_METHOD_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.AlexRoot <em>Root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Root</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexRoot
   * @generated
   */
  EClass getAlexRoot();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.AlexRoot#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexRoot#getName()
   * @see #getAlexRoot()
   * @generated
   */
  EAttribute getAlexRoot_Name();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.alex.xtext.alex.AlexRoot#getCompileTarget <em>Compile Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Compile Target</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexRoot#getCompileTarget()
   * @see #getAlexRoot()
   * @generated
   */
  EReference getAlexRoot_CompileTarget();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.alex.xtext.alex.AlexRoot#getJavaImports <em>Java Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Java Imports</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexRoot#getJavaImports()
   * @see #getAlexRoot()
   * @generated
   */
  EReference getAlexRoot_JavaImports();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.alex.xtext.alex.AlexRoot#getEcoreImport <em>Ecore Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ecore Import</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexRoot#getEcoreImport()
   * @see #getAlexRoot()
   * @generated
   */
  EReference getAlexRoot_EcoreImport();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.alex.xtext.alex.AlexRoot#getAlexImports <em>Alex Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Alex Imports</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexRoot#getAlexImports()
   * @see #getAlexRoot()
   * @generated
   */
  EReference getAlexRoot_AlexImports();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.alex.xtext.alex.AlexRoot#getClasses <em>Classes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Classes</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexRoot#getClasses()
   * @see #getAlexRoot()
   * @generated
   */
  EReference getAlexRoot_Classes();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.CompileTarget <em>Compile Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compile Target</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.CompileTarget
   * @generated
   */
  EClass getCompileTarget();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.CompileTarget#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.CompileTarget#getName()
   * @see #getCompileTarget()
   * @generated
   */
  EAttribute getCompileTarget_Name();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.CompileTarget#isTruffle <em>Truffle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Truffle</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.CompileTarget#isTruffle()
   * @see #getCompileTarget()
   * @generated
   */
  EAttribute getCompileTarget_Truffle();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.CompileTarget#isChild <em>Child</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Child</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.CompileTarget#isChild()
   * @see #getCompileTarget()
   * @generated
   */
  EAttribute getCompileTarget_Child();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.EcoreImport <em>Ecore Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ecore Import</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.EcoreImport
   * @generated
   */
  EClass getEcoreImport();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.EcoreImport#getUri <em>Uri</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Uri</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.EcoreImport#getUri()
   * @see #getEcoreImport()
   * @generated
   */
  EAttribute getEcoreImport_Uri();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.AlexImport <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexImport
   * @generated
   */
  EClass getAlexImport();

  /**
   * Returns the meta object for the reference '{@link fr.inria.diverse.alex.xtext.alex.AlexImport#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexImport#getRef()
   * @see #getAlexImport()
   * @generated
   */
  EReference getAlexImport_Ref();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.AlexClass <em>Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexClass
   * @generated
   */
  EClass getAlexClass();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.AlexClass#isAbstract <em>Abstract</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Abstract</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexClass#isAbstract()
   * @see #getAlexClass()
   * @generated
   */
  EAttribute getAlexClass_Abstract();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.AlexClass#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexClass#getName()
   * @see #getAlexClass()
   * @generated
   */
  EAttribute getAlexClass_Name();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.alex.xtext.alex.AlexClass#getMutables <em>Mutables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mutables</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexClass#getMutables()
   * @see #getAlexClass()
   * @generated
   */
  EReference getAlexClass_Mutables();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.alex.xtext.alex.AlexClass#getMethods <em>Methods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Methods</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexClass#getMethods()
   * @see #getAlexClass()
   * @generated
   */
  EReference getAlexClass_Methods();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.MutableRef <em>Mutable Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mutable Ref</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.MutableRef
   * @generated
   */
  EClass getMutableRef();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.MutableRef#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.MutableRef#getName()
   * @see #getMutableRef()
   * @generated
   */
  EAttribute getMutableRef_Name();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.AlexMethod <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexMethod
   * @generated
   */
  EClass getAlexMethod();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.alex.xtext.alex.AlexMethod#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexMethod#getType()
   * @see #getAlexMethod()
   * @generated
   */
  EReference getAlexMethod_Type();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.AlexMethod#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexMethod#getName()
   * @see #getAlexMethod()
   * @generated
   */
  EAttribute getAlexMethod_Name();

  /**
   * Returns the meta object for the containment reference list '{@link fr.inria.diverse.alex.xtext.alex.AlexMethod#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AlexMethod#getParams()
   * @see #getAlexMethod()
   * @generated
   */
  EReference getAlexMethod_Params();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.ConcreteMethod <em>Concrete Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Concrete Method</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.ConcreteMethod
   * @generated
   */
  EClass getConcreteMethod();

  /**
   * Returns the meta object for the containment reference '{@link fr.inria.diverse.alex.xtext.alex.ConcreteMethod#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.ConcreteMethod#getBlock()
   * @see #getConcreteMethod()
   * @generated
   */
  EReference getConcreteMethod_Block();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.AbstractMethod <em>Abstract Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abstract Method</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.AbstractMethod
   * @generated
   */
  EClass getAbstractMethod();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.DefMethod <em>Def Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Def Method</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.DefMethod
   * @generated
   */
  EClass getDefMethod();

  /**
   * Returns the meta object for the attribute '{@link fr.inria.diverse.alex.xtext.alex.DefMethod#isDispatch <em>Dispatch</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Dispatch</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.DefMethod#isDispatch()
   * @see #getDefMethod()
   * @generated
   */
  EAttribute getDefMethod_Dispatch();

  /**
   * Returns the meta object for class '{@link fr.inria.diverse.alex.xtext.alex.OverrideMethod <em>Override Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Override Method</em>'.
   * @see fr.inria.diverse.alex.xtext.alex.OverrideMethod
   * @generated
   */
  EClass getOverrideMethod();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  AlexFactory getAlexFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AlexRootImpl <em>Root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexRootImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAlexRoot()
     * @generated
     */
    EClass ALEX_ROOT = eINSTANCE.getAlexRoot();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALEX_ROOT__NAME = eINSTANCE.getAlexRoot_Name();

    /**
     * The meta object literal for the '<em><b>Compile Target</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_ROOT__COMPILE_TARGET = eINSTANCE.getAlexRoot_CompileTarget();

    /**
     * The meta object literal for the '<em><b>Java Imports</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_ROOT__JAVA_IMPORTS = eINSTANCE.getAlexRoot_JavaImports();

    /**
     * The meta object literal for the '<em><b>Ecore Import</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_ROOT__ECORE_IMPORT = eINSTANCE.getAlexRoot_EcoreImport();

    /**
     * The meta object literal for the '<em><b>Alex Imports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_ROOT__ALEX_IMPORTS = eINSTANCE.getAlexRoot_AlexImports();

    /**
     * The meta object literal for the '<em><b>Classes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_ROOT__CLASSES = eINSTANCE.getAlexRoot_Classes();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.CompileTargetImpl <em>Compile Target</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.CompileTargetImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getCompileTarget()
     * @generated
     */
    EClass COMPILE_TARGET = eINSTANCE.getCompileTarget();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPILE_TARGET__NAME = eINSTANCE.getCompileTarget_Name();

    /**
     * The meta object literal for the '<em><b>Truffle</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPILE_TARGET__TRUFFLE = eINSTANCE.getCompileTarget_Truffle();

    /**
     * The meta object literal for the '<em><b>Child</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPILE_TARGET__CHILD = eINSTANCE.getCompileTarget_Child();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.EcoreImportImpl <em>Ecore Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.EcoreImportImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getEcoreImport()
     * @generated
     */
    EClass ECORE_IMPORT = eINSTANCE.getEcoreImport();

    /**
     * The meta object literal for the '<em><b>Uri</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ECORE_IMPORT__URI = eINSTANCE.getEcoreImport_Uri();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AlexImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexImportImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAlexImport()
     * @generated
     */
    EClass ALEX_IMPORT = eINSTANCE.getAlexImport();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_IMPORT__REF = eINSTANCE.getAlexImport_Ref();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AlexClassImpl <em>Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexClassImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAlexClass()
     * @generated
     */
    EClass ALEX_CLASS = eINSTANCE.getAlexClass();

    /**
     * The meta object literal for the '<em><b>Abstract</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALEX_CLASS__ABSTRACT = eINSTANCE.getAlexClass_Abstract();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALEX_CLASS__NAME = eINSTANCE.getAlexClass_Name();

    /**
     * The meta object literal for the '<em><b>Mutables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_CLASS__MUTABLES = eINSTANCE.getAlexClass_Mutables();

    /**
     * The meta object literal for the '<em><b>Methods</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_CLASS__METHODS = eINSTANCE.getAlexClass_Methods();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.MutableRefImpl <em>Mutable Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.MutableRefImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getMutableRef()
     * @generated
     */
    EClass MUTABLE_REF = eINSTANCE.getMutableRef();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MUTABLE_REF__NAME = eINSTANCE.getMutableRef_Name();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AlexMethodImpl <em>Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexMethodImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAlexMethod()
     * @generated
     */
    EClass ALEX_METHOD = eINSTANCE.getAlexMethod();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_METHOD__TYPE = eINSTANCE.getAlexMethod_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALEX_METHOD__NAME = eINSTANCE.getAlexMethod_Name();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALEX_METHOD__PARAMS = eINSTANCE.getAlexMethod_Params();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.ConcreteMethodImpl <em>Concrete Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.ConcreteMethodImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getConcreteMethod()
     * @generated
     */
    EClass CONCRETE_METHOD = eINSTANCE.getConcreteMethod();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONCRETE_METHOD__BLOCK = eINSTANCE.getConcreteMethod_Block();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.AbstractMethodImpl <em>Abstract Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.AbstractMethodImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getAbstractMethod()
     * @generated
     */
    EClass ABSTRACT_METHOD = eINSTANCE.getAbstractMethod();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.DefMethodImpl <em>Def Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.DefMethodImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getDefMethod()
     * @generated
     */
    EClass DEF_METHOD = eINSTANCE.getDefMethod();

    /**
     * The meta object literal for the '<em><b>Dispatch</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEF_METHOD__DISPATCH = eINSTANCE.getDefMethod_Dispatch();

    /**
     * The meta object literal for the '{@link fr.inria.diverse.alex.xtext.alex.impl.OverrideMethodImpl <em>Override Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fr.inria.diverse.alex.xtext.alex.impl.OverrideMethodImpl
     * @see fr.inria.diverse.alex.xtext.alex.impl.AlexPackageImpl#getOverrideMethod()
     * @generated
     */
    EClass OVERRIDE_METHOD = eINSTANCE.getOverrideMethod();

  }

} //AlexPackage
