/**
 * generated by Xtext 2.14.0
 */
package fr.inria.diverse.alex.xtext.alex;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see fr.inria.diverse.alex.xtext.alex.AlexPackage
 * @generated
 */
public interface AlexFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  AlexFactory eINSTANCE = fr.inria.diverse.alex.xtext.alex.impl.AlexFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Root</em>'.
   * @generated
   */
  AlexRoot createAlexRoot();

  /**
   * Returns a new object of class '<em>Ecore Import</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Ecore Import</em>'.
   * @generated
   */
  EcoreImport createEcoreImport();

  /**
   * Returns a new object of class '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Import</em>'.
   * @generated
   */
  AlexImport createAlexImport();

  /**
   * Returns a new object of class '<em>Class</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Class</em>'.
   * @generated
   */
  AlexClass createAlexClass();

  /**
   * Returns a new object of class '<em>Method</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Method</em>'.
   * @generated
   */
  AlexMethod createAlexMethod();

  /**
   * Returns a new object of class '<em>Concrete Method</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Concrete Method</em>'.
   * @generated
   */
  ConcreteMethod createConcreteMethod();

  /**
   * Returns a new object of class '<em>Abstract Method</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Abstract Method</em>'.
   * @generated
   */
  AbstractMethod createAbstractMethod();

  /**
   * Returns a new object of class '<em>Def Method</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Def Method</em>'.
   * @generated
   */
  DefMethod createDefMethod();

  /**
   * Returns a new object of class '<em>Override Method</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Override Method</em>'.
   * @generated
   */
  OverrideMethod createOverrideMethod();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  AlexPackage getAlexPackage();

} //AlexFactory
